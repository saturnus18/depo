.header{
	background-color: #222;
	color: #fff;
}
.heading{
	text-transform: uppercase;
}
.line{
	width: 150px;
	height: 1px;
	background-color: #fff;
	opacity: .7;
}
h1, h2, h3, h4, h5, h6{
	margin-bottom: 0;
	/*font-weight: 600;*/
}
.date{
	display: -webkit-flex;
	display: -moz-flex;
	display: -ms-flex;
	display: -o-flex;
	display: flex;
	-ms-align-items: center;
	align-items: center;
	justify-content: flex-end;
}
.date .heading{
	margin-right: 1rem;
}
.parallax-window {
    min-height: 346px;
    background: transparent;
}
body{
	background-color: #222;
	font-family: 'Burford-Line';
}
p{
	font-size: 1.5rem;
	color: #fff;
}

/* Our mixin positions a copy of our text directly on our existing text, while also setting content to the appropriate text set in the data-text attribute. */
 .glitch {
	 position: relative;
	 color: white;
	 /*font-size: 4em;
	 letter-spacing: 0.5em;*/
	/* Animation provies a slight random skew. Check bottom of doc for more information on how to random skew. */
	 animation: glitch-skew 1s infinite linear alternate-reverse;
}
 .glitch::before {
	 content: attr(data-text);
	 position: absolute;
	 top: -6px;
	 left: 0;
	 width: 100%;
	 height: 100%;
	 left: 2px;
	 text-shadow: -2px 0 #ff00c1;
	/* Creates an initial clip for our glitch. This works in a typical top,right,bottom,left fashion and creates a mask to only show a certain part of the glitch at a time. */
	 clip: rect(44px, 450px, 56px, 0);
	/* Runs our glitch-anim defined below to run in a 5s loop, infinitely, with an alternating animation to keep things fresh. */
	 animation: glitch-anim 5s infinite linear alternate-reverse;
}
 .glitch::after {
	 content: attr(data-text);
	 position: absolute;
	 top: -6px;
	 left: 0;
	 width: 100%;
	 height: 100%;
	 left: -2px;
	 text-shadow: -2px 0 #00fff9, 2px 2px #ff00c1;
	 animation: glitch-anim2 1s infinite linear alternate-reverse;
}
/* Creates an animation with 20 steaps. For each step, it calculates a percentage for the specific step. It then generates a random clip box to be used for the random glitch effect. Also adds a very subtle skew to change the 'thickness' of the glitch.*/
 @keyframes glitch-anim {
	 0% {
		 clip: rect(20px, 9999px, 53px, 0);
		 transform: skew(0.81deg);
	}
	 5% {
		 clip: rect(81px, 9999px, 49px, 0);
		 transform: skew(0.06deg);
	}
	 10% {
		 clip: rect(80px, 9999px, 98px, 0);
		 transform: skew(0.27deg);
	}
	 15% {
		 clip: rect(9px, 9999px, 51px, 0);
		 transform: skew(0.77deg);
	}
	 20% {
		 clip: rect(55px, 9999px, 99px, 0);
		 transform: skew(0.5deg);
	}
	 25% {
		 clip: rect(4px, 9999px, 52px, 0);
		 transform: skew(0.48deg);
	}
	 30% {
		 clip: rect(47px, 9999px, 34px, 0);
		 transform: skew(0.76deg);
	}
	 35% {
		 clip: rect(59px, 9999px, 53px, 0);
		 transform: skew(0.04deg);
	}
	 40% {
		 clip: rect(36px, 9999px, 24px, 0);
		 transform: skew(0.52deg);
	}
	 45% {
		 clip: rect(43px, 9999px, 66px, 0);
		 transform: skew(0.3deg);
	}
	 50% {
		 clip: rect(16px, 9999px, 47px, 0);
		 transform: skew(0.26deg);
	}
	 55% {
		 clip: rect(8px, 9999px, 21px, 0);
		 transform: skew(0.96deg);
	}
	 60% {
		 clip: rect(86px, 9999px, 37px, 0);
		 transform: skew(0.6deg);
	}
	 65% {
		 clip: rect(75px, 9999px, 30px, 0);
		 transform: skew(0.64deg);
	}
	 70% {
		 clip: rect(33px, 9999px, 90px, 0);
		 transform: skew(0.05deg);
	}
	 75% {
		 clip: rect(79px, 9999px, 97px, 0);
		 transform: skew(0.91deg);
	}
	 80% {
		 clip: rect(54px, 9999px, 84px, 0);
		 transform: skew(0.49deg);
	}
	 85% {
		 clip: rect(99px, 9999px, 69px, 0);
		 transform: skew(0.03deg);
	}
	 90% {
		 clip: rect(94px, 9999px, 82px, 0);
		 transform: skew(0.51deg);
	}
	 95% {
		 clip: rect(90px, 9999px, 78px, 0);
		 transform: skew(0.19deg);
	}
	 100% {
		 clip: rect(46px, 9999px, 19px, 0);
		 transform: skew(0.07deg);
	}
}
 @keyframes glitch-anim2 {
	 0% {
		 clip: rect(55px, 9999px, 13px, 0);
		 transform: skew(0.03deg);
	}
	 5% {
		 clip: rect(6px, 9999px, 98px, 0);
		 transform: skew(0.97deg);
	}
	 10% {
		 clip: rect(80px, 9999px, 11px, 0);
		 transform: skew(0.86deg);
	}
	 15% {
		 clip: rect(53px, 9999px, 29px, 0);
		 transform: skew(0.71deg);
	}
	 20% {
		 clip: rect(99px, 9999px, 58px, 0);
		 transform: skew(0.38deg);
	}
	 25% {
		 clip: rect(32px, 9999px, 49px, 0);
		 transform: skew(0.41deg);
	}
	 30% {
		 clip: rect(64px, 9999px, 48px, 0);
		 transform: skew(0.03deg);
	}
	 35% {
		 clip: rect(22px, 9999px, 3px, 0);
		 transform: skew(0.33deg);
	}
	 40% {
		 clip: rect(91px, 9999px, 58px, 0);
		 transform: skew(0.45deg);
	}
	 45% {
		 clip: rect(83px, 9999px, 51px, 0);
		 transform: skew(0.02deg);
	}
	 50% {
		 clip: rect(20px, 9999px, 85px, 0);
		 transform: skew(0.77deg);
	}
	 55% {
		 clip: rect(68px, 9999px, 70px, 0);
		 transform: skew(0.66deg);
	}
	 60% {
		 clip: rect(59px, 9999px, 97px, 0);
		 transform: skew(0.71deg);
	}
	 65% {
		 clip: rect(65px, 9999px, 79px, 0);
		 transform: skew(0.75deg);
	}
	 70% {
		 clip: rect(67px, 9999px, 72px, 0);
		 transform: skew(0.63deg);
	}
	 75% {
		 clip: rect(27px, 9999px, 27px, 0);
		 transform: skew(0.13deg);
	}
	 80% {
		 clip: rect(66px, 9999px, 79px, 0);
		 transform: skew(0.67deg);
	}
	 85% {
		 clip: rect(11px, 9999px, 34px, 0);
		 transform: skew(0.37deg);
	}
	 90% {
		 clip: rect(27px, 9999px, 76px, 0);
		 transform: skew(0.21deg);
	}
	 95% {
		 clip: rect(20px, 9999px, 92px, 0);
		 transform: skew(0.97deg);
	}
	 100% {
		 clip: rect(94px, 9999px, 32px, 0);
		 transform: skew(0.61deg);
	}
}
 @keyframes glitch-skew {
	 0% {
		 transform: skew(1deg);
	}
	 10% {
		 transform: skew(-3deg);
	}
	 20% {
		 transform: skew(2deg);
	}
	 30% {
		 transform: skew(1deg);
	}
	 40% {
		 transform: skew(-3deg);
	}
	 50% {
		 transform: skew(3deg);
	}
	 60% {
		 transform: skew(5deg);
	}
	 70% {
		 transform: skew(3deg);
	}
	 80% {
		 transform: skew(-4deg);
	}
	 90% {
		 transform: skew(4deg);
	}
	 100% {
		 transform: skew(1deg);
	}
}
